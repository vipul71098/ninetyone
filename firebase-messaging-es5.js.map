{"version":3,"sources":["node_modules/@firebase/installations/dist/index.esm.js","node_modules/@firebase/messaging/dist/index.esm.js","node_modules/firebase/messaging/dist/index.esm.js","node_modules/idb/build/idb.js"],"names":[],"mappings":"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","sourcesContent":["import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spread, __assign, __values } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n\nvar name = \"@firebase/installations\";\nvar version = \"0.3.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PENDING_TIMEOUT_MS = 10000;\r\nvar PACKAGE_VERSION = \"w:\" + version;\r\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\r\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\r\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\r\nvar SERVICE = 'installations';\r\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"',\r\n    _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.',\r\n    _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.',\r\n    _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\r\n    _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.',\r\n    _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\",\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\r\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\r\nfunction isServerError(error) {\r\n    return (error instanceof FirebaseError &&\r\n        error.code.includes(\"request-failed\" /* REQUEST_FAILED */));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getInstallationsEndpoint(_a) {\r\n    var projectId = _a.projectId;\r\n    return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\r\n}\r\nfunction extractAuthTokenInfoFromResponse(response) {\r\n    return {\r\n        token: response.token,\r\n        requestStatus: 2 /* COMPLETED */,\r\n        expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\r\n        creationTime: Date.now()\r\n    };\r\n}\r\nfunction getErrorFromResponse(requestName, response) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var responseJson, errorData;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, response.json()];\r\n                case 1:\r\n                    responseJson = _a.sent();\r\n                    errorData = responseJson.error;\r\n                    return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\r\n                            requestName: requestName,\r\n                            serverCode: errorData.code,\r\n                            serverMessage: errorData.message,\r\n                            serverStatus: errorData.status\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getHeaders(_a) {\r\n    var apiKey = _a.apiKey;\r\n    return new Headers({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        'x-goog-api-key': apiKey\r\n    });\r\n}\r\nfunction getHeadersWithAuth(appConfig, _a) {\r\n    var refreshToken = _a.refreshToken;\r\n    var headers = getHeaders(appConfig);\r\n    headers.append('Authorization', getAuthorizationHeader(refreshToken));\r\n    return headers;\r\n}\r\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\r\nfunction retryIfServerError(fn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fn()];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.status >= 500 && result.status < 600) {\r\n                        // Internal Server Error. Retry request.\r\n                        return [2 /*return*/, fn()];\r\n                    }\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\r\n    // This works because the server will never respond with fractions of a second.\r\n    return Number(responseExpiresIn.replace('s', '000'));\r\n}\r\nfunction getAuthorizationHeader(refreshToken) {\r\n    return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createInstallationRequest(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getInstallationsEndpoint(appConfig);\r\n                    headers = getHeaders(appConfig);\r\n                    body = {\r\n                        fid: fid,\r\n                        authVersion: INTERNAL_AUTH_VERSION,\r\n                        appId: appConfig.appId,\r\n                        sdkVersion: PACKAGE_VERSION\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    registeredInstallationEntry = {\r\n                        fid: responseValue.fid || fid,\r\n                        registrationStatus: 2 /* COMPLETED */,\r\n                        refreshToken: responseValue.refreshToken,\r\n                        authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\r\n                    };\r\n                    return [2 /*return*/, registeredInstallationEntry];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Returns a promise that resolves after given time passes. */\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction bufferToBase64UrlSafe(array) {\r\n    var b64 = btoa(String.fromCharCode.apply(String, __spread(array)));\r\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\r\nvar INVALID_FID = '';\r\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\r\nfunction generateFid() {\r\n    try {\r\n        // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\r\n        // bytes. our implementation generates a 17 byte array instead.\r\n        var fidByteArray = new Uint8Array(17);\r\n        var crypto_1 = self.crypto || self.msCrypto;\r\n        crypto_1.getRandomValues(fidByteArray);\r\n        // Replace the first 4 random bits with the constant FID header of 0b0111.\r\n        fidByteArray[0] = 112 + (fidByteArray[0] % 16);\r\n        var fid = encode(fidByteArray);\r\n        return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\r\n    }\r\n    catch (_a) {\r\n        // FID generation errored\r\n        return INVALID_FID;\r\n    }\r\n}\r\n/** Converts a FID Uint8Array to a base64 string representation. */\r\nfunction encode(fidByteArray) {\r\n    var b64String = bufferToBase64UrlSafe(fidByteArray);\r\n    // Remove the 23rd character that was added because of the extra 4 bits at the\r\n    // end of our 17 byte array, and the '=' padding.\r\n    return b64String.substr(0, 22);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DATABASE_NAME = 'firebase-installations-database';\r\nvar DATABASE_VERSION = 1;\r\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\r\nvar dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (upgradeDB.oldVersion) {\r\n                case 0:\r\n                    upgradeDB.createObjectStore(OBJECT_STORE_NAME);\r\n            }\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\n/** Assigns or overwrites the record for the given key with the given value. */\r\nfunction set(appConfig, value) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(value, key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/, value];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Removes record(s) from the objectStore that match the given key. */\r\nfunction remove(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, tx.complete];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\r\nfunction update(appConfig, updateFn) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var key, db, tx, store, oldValue, newValue;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    key = getKey(appConfig);\r\n                    return [4 /*yield*/, getDbPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\r\n                    store = tx.objectStore(OBJECT_STORE_NAME);\r\n                    return [4 /*yield*/, store.get(key)];\r\n                case 2:\r\n                    oldValue = _a.sent();\r\n                    newValue = updateFn(oldValue);\r\n                    if (!(newValue === undefined)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, store.delete(key)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: return [4 /*yield*/, store.put(newValue, key)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [4 /*yield*/, tx.complete];\r\n                case 7:\r\n                    _a.sent();\r\n                    return [2 /*return*/, newValue];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getKey(appConfig) {\r\n    return appConfig.appName + \"!\" + appConfig.appId;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\r\nfunction getInstallationEntry(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise, installationEntry, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                        var installationEntry = updateOrCreateInstallationEntry(oldEntry);\r\n                        var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\r\n                        registrationPromise = entryWithPromise.registrationPromise;\r\n                        return entryWithPromise.installationEntry;\r\n                    })];\r\n                case 1:\r\n                    installationEntry = _b.sent();\r\n                    if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\r\n                    _a = {};\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2: \r\n                // FID generation failed. Waiting for the FID from the server.\r\n                return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\r\n                case 3: return [2 /*return*/, {\r\n                        installationEntry: installationEntry,\r\n                        registrationPromise: registrationPromise\r\n                    }];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\r\nfunction updateOrCreateInstallationEntry(oldEntry) {\r\n    var entry = oldEntry || {\r\n        fid: generateFid(),\r\n        registrationStatus: 0 /* NOT_STARTED */\r\n    };\r\n    return clearTimedOutRequest(entry);\r\n}\r\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\r\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\r\n    if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n        if (!navigator.onLine) {\r\n            // Registration required but app is offline.\r\n            var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\r\n            return {\r\n                installationEntry: installationEntry,\r\n                registrationPromise: registrationPromiseWithError\r\n            };\r\n        }\r\n        // Try registering. Change status to IN_PROGRESS.\r\n        var inProgressEntry = {\r\n            fid: installationEntry.fid,\r\n            registrationStatus: 1 /* IN_PROGRESS */,\r\n            registrationTime: Date.now()\r\n        };\r\n        var registrationPromise = registerInstallation(appConfig, inProgressEntry);\r\n        return { installationEntry: inProgressEntry, registrationPromise: registrationPromise };\r\n    }\r\n    else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\r\n        return {\r\n            installationEntry: installationEntry,\r\n            registrationPromise: waitUntilFidRegistration(appConfig)\r\n        };\r\n    }\r\n    else {\r\n        return { installationEntry: installationEntry };\r\n    }\r\n}\r\n/** This will be executed only once for each new Firebase Installation. */\r\nfunction registerInstallation(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registeredInstallationEntry, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 7]);\r\n                    return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\r\n                case 1:\r\n                    registeredInstallationEntry = _a.sent();\r\n                    return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3 /*break*/, 4];\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 3:\r\n                    // Server returned a \"FID can not be used\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 6];\r\n                case 4: \r\n                // Registration failed. Set FID as not registered.\r\n                return [4 /*yield*/, set(appConfig, {\r\n                        fid: installationEntry.fid,\r\n                        registrationStatus: 0 /* NOT_STARTED */\r\n                    })];\r\n                case 5:\r\n                    // Registration failed. Set FID as not registered.\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: throw e_1;\r\n                case 7: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/** Call if FID registration is pending in another request. */\r\nfunction waitUntilFidRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    _b.label = 2;\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // createInstallation request still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // createInstallation request still in progress.\r\n                    _b.sent();\r\n                    return [4 /*yield*/, updateInstallationRequest(appConfig)];\r\n                case 4:\r\n                    entry = _b.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\r\n                    return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 6:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        return [2 /*return*/, registrationPromise];\r\n                    }\r\n                    else {\r\n                        // if there is no registrationPromise, entry is registered.\r\n                        return [2 /*return*/, installationEntry];\r\n                    }\r\n                case 7: return [2 /*return*/, entry];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateInstallationRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!oldEntry) {\r\n            throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\r\n        }\r\n        return clearTimedOutRequest(oldEntry);\r\n    });\r\n}\r\nfunction clearTimedOutRequest(entry) {\r\n    if (hasInstallationRequestTimedOut(entry)) {\r\n        return {\r\n            fid: entry.fid,\r\n            registrationStatus: 0 /* NOT_STARTED */\r\n        };\r\n    }\r\n    return entry;\r\n}\r\nfunction hasInstallationRequestTimedOut(installationEntry) {\r\n    return (installationEntry.registrationStatus === 1 /* IN_PROGRESS */ &&\r\n        installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction generateAuthTokenRequest(_a, installationEntry) {\r\n    var appConfig = _a.appConfig, platformLoggerProvider = _a.platformLoggerProvider;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\r\n                    }\r\n                    body = {\r\n                        installation: {\r\n                            sdkVersion: PACKAGE_VERSION\r\n                        }\r\n                    };\r\n                    request = {\r\n                        method: 'POST',\r\n                        headers: headers,\r\n                        body: JSON.stringify(body)\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _b.sent();\r\n                    if (!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, response.json()];\r\n                case 2:\r\n                    responseValue = _b.sent();\r\n                    completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\r\n                    return [2 /*return*/, completedAuthToken];\r\n                case 3: return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\r\n                case 4: throw _b.sent();\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\r\nfunction refreshAuthToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tokenPromise, entry, authToken, _a;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\r\n                        if (!isEntryRegistered(oldEntry)) {\r\n                            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n                        }\r\n                        var oldAuthToken = oldEntry.authToken;\r\n                        if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\r\n                            // There is a valid token in the DB.\r\n                            return oldEntry;\r\n                        }\r\n                        else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\r\n                            // There already is a token request in progress.\r\n                            tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\r\n                            return oldEntry;\r\n                        }\r\n                        else {\r\n                            // No token or token expired.\r\n                            if (!navigator.onLine) {\r\n                                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                            }\r\n                            var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\r\n                            tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\r\n                            return inProgressEntry;\r\n                        }\r\n                    })];\r\n                case 1:\r\n                    entry = _b.sent();\r\n                    if (!tokenPromise) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, tokenPromise];\r\n                case 2:\r\n                    _a = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a = entry.authToken;\r\n                    _b.label = 4;\r\n                case 4:\r\n                    authToken = _a;\r\n                    return [2 /*return*/, authToken];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\r\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var entry, authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    _a.label = 2;\r\n                case 2:\r\n                    if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\r\n                    // generateAuthToken still in progress.\r\n                    return [4 /*yield*/, sleep(100)];\r\n                case 3:\r\n                    // generateAuthToken still in progress.\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\r\n                case 4:\r\n                    entry = _a.sent();\r\n                    return [3 /*break*/, 2];\r\n                case 5:\r\n                    authToken = entry.authToken;\r\n                    if (authToken.requestStatus === 0 /* NOT_STARTED */) {\r\n                        // The request timed out or failed in a different call. Try again.\r\n                        return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, authToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\r\nfunction updateAuthTokenRequest(appConfig) {\r\n    return update(appConfig, function (oldEntry) {\r\n        if (!isEntryRegistered(oldEntry)) {\r\n            throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\r\n        }\r\n        var oldAuthToken = oldEntry.authToken;\r\n        if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\r\n            return __assign(__assign({}, oldEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n        }\r\n        return oldEntry;\r\n    });\r\n}\r\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 3, , 8]);\r\n                    return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: authToken });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/, authToken];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3 /*break*/, 5];\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    return [4 /*yield*/, remove(dependencies.appConfig)];\r\n                case 4:\r\n                    // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\r\n                    // Generate a new ID next time.\r\n                    _a.sent();\r\n                    return [3 /*break*/, 7];\r\n                case 5:\r\n                    updatedInstallationEntry = __assign(__assign({}, installationEntry), { authToken: { requestStatus: 0 /* NOT_STARTED */ } });\r\n                    return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\r\n                case 6:\r\n                    _a.sent();\r\n                    _a.label = 7;\r\n                case 7: throw e_1;\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction isEntryRegistered(installationEntry) {\r\n    return (installationEntry !== undefined &&\r\n        installationEntry.registrationStatus === 2 /* COMPLETED */);\r\n}\r\nfunction isAuthTokenValid(authToken) {\r\n    return (authToken.requestStatus === 2 /* COMPLETED */ &&\r\n        !isAuthTokenExpired(authToken));\r\n}\r\nfunction isAuthTokenExpired(authToken) {\r\n    var now = Date.now();\r\n    return (now < authToken.creationTime ||\r\n        authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER);\r\n}\r\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\r\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\r\n    var inProgressAuthToken = {\r\n        requestStatus: 1 /* IN_PROGRESS */,\r\n        requestTime: Date.now()\r\n    };\r\n    return __assign(__assign({}, oldEntry), { authToken: inProgressAuthToken });\r\n}\r\nfunction hasAuthTokenRequestTimedOut(authToken) {\r\n    return (authToken.requestStatus === 1 /* IN_PROGRESS */ &&\r\n        authToken.requestTime + PENDING_TIMEOUT_MS < Date.now());\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getId(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, installationEntry, registrationPromise;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\r\n                case 1:\r\n                    _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\r\n                    if (registrationPromise) {\r\n                        registrationPromise.catch(console.error);\r\n                    }\r\n                    else {\r\n                        // If the installation is already registered, update the authentication\r\n                        // token if needed.\r\n                        refreshAuthToken(dependencies).catch(console.error);\r\n                    }\r\n                    return [2 /*return*/, installationEntry.fid];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getToken(dependencies, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\r\n                case 2:\r\n                    authToken = _a.sent();\r\n                    return [2 /*return*/, authToken.token];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction completeInstallationRegistration(appConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var registrationPromise;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getInstallationEntry(appConfig)];\r\n                case 1:\r\n                    registrationPromise = (_a.sent()).registrationPromise;\r\n                    if (!registrationPromise) return [3 /*break*/, 3];\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    return [4 /*yield*/, registrationPromise];\r\n                case 2:\r\n                    // A createInstallation request is in progress. Wait until it finishes.\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallationRequest(appConfig, installationEntry) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var endpoint, headers, request, response;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    endpoint = getDeleteEndpoint(appConfig, installationEntry);\r\n                    headers = getHeadersWithAuth(appConfig, installationEntry);\r\n                    request = {\r\n                        method: 'DELETE',\r\n                        headers: headers\r\n                    };\r\n                    return [4 /*yield*/, retryIfServerError(function () { return fetch(endpoint, request); })];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    if (!!response.ok) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\r\n                case 2: throw _a.sent();\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getDeleteEndpoint(appConfig, _a) {\r\n    var fid = _a.fid;\r\n    return getInstallationsEndpoint(appConfig) + \"/\" + fid;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction deleteInstallation(dependencies) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var appConfig, entry;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    appConfig = dependencies.appConfig;\r\n                    return [4 /*yield*/, update(appConfig, function (oldEntry) {\r\n                            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\r\n                                // Delete the unregistered entry without sending a deleteInstallation request.\r\n                                return undefined;\r\n                            }\r\n                            return oldEntry;\r\n                        })];\r\n                case 1:\r\n                    entry = _a.sent();\r\n                    if (!entry) return [3 /*break*/, 6];\r\n                    if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\r\n                    // Can't delete while trying to register.\r\n                    throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\r\n                case 2:\r\n                    if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\r\n                    if (!!navigator.onLine) return [3 /*break*/, 3];\r\n                    throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\r\n                case 3: return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, remove(appConfig)];\r\n                case 5:\r\n                    _a.sent();\r\n                    _a.label = 6;\r\n                case 6: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction extractAppConfig(app) {\r\n    var e_1, _a;\r\n    if (!app || !app.options) {\r\n        throw getMissingValueError('App Configuration');\r\n    }\r\n    if (!app.name) {\r\n        throw getMissingValueError('App Name');\r\n    }\r\n    // Required app config keys\r\n    var configKeys = [\r\n        'projectId',\r\n        'apiKey',\r\n        'appId'\r\n    ];\r\n    try {\r\n        for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\r\n            var keyName = configKeys_1_1.value;\r\n            if (!app.options[keyName]) {\r\n                throw getMissingValueError(keyName);\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return {\r\n        appName: app.name,\r\n        projectId: app.options.projectId,\r\n        apiKey: app.options.apiKey,\r\n        appId: app.options.appId\r\n    };\r\n}\r\nfunction getMissingValueError(valueName) {\r\n    return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\r\n        valueName: valueName\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerInstallations(instance) {\r\n    var installationsName = 'installations';\r\n    instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\r\n        var app = container.getProvider('app').getImmediate();\r\n        // Throws if app isn't configured properly.\r\n        var appConfig = extractAppConfig(app);\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        var dependencies = {\r\n            appConfig: appConfig,\r\n            platformLoggerProvider: platformLoggerProvider\r\n        };\r\n        return {\r\n            app: app,\r\n            getId: function () { return getId(dependencies); },\r\n            getToken: function (forceRefresh) {\r\n                return getToken(dependencies, forceRefresh);\r\n            },\r\n            delete: function () { return deleteInstallation(dependencies); }\r\n        };\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterInstallations(firebase);\n\nexport { registerInstallations };\n//# sourceMappingURL=index.esm.js.map\n","import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __spread, __awaiter, __generator, __extends, __assign } from 'tslib';\nimport { ErrorFactory, createSubscribe } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_MAP = (_a = {},\r\n    _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.',\r\n    _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.',\r\n    _a[\"should-be-overriden\" /* SHOULD_BE_INHERITED */] = 'This method should be overriden by extended classes.',\r\n    _a[\"bad-sender-id\" /* BAD_SENDER_ID */] = \"Please ensure that 'messagingSenderId' is set \" +\r\n        'correctly in the options passed into firebase.initializeApp().',\r\n    _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The required permissions were not granted and dismissed instead.',\r\n    _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The required permissions were not granted and blocked instead.',\r\n    _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's \" +\r\n        'required to use the firebase SDK.',\r\n    _a[\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */] = 'Notifications have been blocked.',\r\n    _a[\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the ' +\r\n        'default service worker. {$browserErrorMessage}',\r\n    _a[\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */] = 'A service worker registration was the expected input.',\r\n    _a[\"get-subscription-failed\" /* GET_SUBSCRIPTION_FAILED */] = 'There was an error when trying to get ' +\r\n        'any existing Push Subscriptions.',\r\n    _a[\"invalid-saved-token\" /* INVALID_SAVED_TOKEN */] = 'Unable to access details of the saved token.',\r\n    _a[\"sw-reg-redundant\" /* SW_REG_REDUNDANT */] = 'The service worker being used for push was made redundant.',\r\n    _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}',\r\n    _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.',\r\n    _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' +\r\n        'user from FCM: {$errorInfo}',\r\n    _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}',\r\n    _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.',\r\n    _a[\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your service worker is used.',\r\n    _a[\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */] = 'You must pass a valid token into ' +\r\n        'deleteToken(), i.e. the token from getToken().',\r\n    _a[\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */] = 'The deletion attempt for token could not ' +\r\n        'be performed as the token was not found.',\r\n    _a[\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */] = 'The deletion attempt for service worker ' +\r\n        'scope could not be performed as the scope was not found.',\r\n    _a[\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */] = 'The input to setBackgroundMessageHandler() must be a function.',\r\n    _a[\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */] = 'An attempt was made to message a non-existant window client.',\r\n    _a[\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */] = 'There was an error while re-subscribing ' +\r\n        'the FCM token for push messaging. Will have to resubscribe the ' +\r\n        'user on next visit. {$errorInfo}',\r\n    _a[\"no-fcm-token-for-resubscribe\" /* NO_FCM_TOKEN_FOR_RESUBSCRIBE */] = 'Could not find an FCM token ' +\r\n        'and as a result, unable to resubscribe. Will have to resubscribe the ' +\r\n        'user on next visit.',\r\n    _a[\"failed-to-delete-token\" /* FAILED_TO_DELETE_TOKEN */] = 'Unable to delete the currently saved token.',\r\n    _a[\"no-sw-in-reg\" /* NO_SW_IN_REG */] = 'Even though the service worker registration was ' +\r\n        'successful, there was a problem accessing the service worker itself.',\r\n    _a[\"bad-scope\" /* BAD_SCOPE */] = 'The service worker scope must be a string with at ' +\r\n        'least one character.',\r\n    _a[\"bad-vapid-key\" /* BAD_VAPID_KEY */] = 'The public VAPID key is not a Uint8Array with 65 bytes.',\r\n    _a[\"bad-subscription\" /* BAD_SUBSCRIPTION */] = 'The subscription must be a valid PushSubscription.',\r\n    _a[\"bad-token\" /* BAD_TOKEN */] = 'The FCM Token used for storage / lookup was not ' +\r\n        'a valid token string.',\r\n    _a[\"failed-delete-vapid-key\" /* FAILED_DELETE_VAPID_KEY */] = 'The VAPID key could not be deleted.',\r\n    _a[\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */] = 'The public VAPID key must be a string.',\r\n    _a[\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' +\r\n        'called before calling getToken() to ensure your VAPID key is used.',\r\n    _a[\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */] = 'The public VAPID key did not equal 65 bytes when decrypted.',\r\n    _a);\r\nvar errorFactory = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_PUBLIC_VAPID_KEY = new Uint8Array([\r\n    0x04,\r\n    0x33,\r\n    0x94,\r\n    0xf7,\r\n    0xdf,\r\n    0xa1,\r\n    0xeb,\r\n    0xb1,\r\n    0xdc,\r\n    0x03,\r\n    0xa2,\r\n    0x5e,\r\n    0x15,\r\n    0x71,\r\n    0xdb,\r\n    0x48,\r\n    0xd3,\r\n    0x2e,\r\n    0xed,\r\n    0xed,\r\n    0xb2,\r\n    0x34,\r\n    0xdb,\r\n    0xb7,\r\n    0x47,\r\n    0x3a,\r\n    0x0c,\r\n    0x8f,\r\n    0xc4,\r\n    0xcc,\r\n    0xe1,\r\n    0x6f,\r\n    0x3c,\r\n    0x8c,\r\n    0x84,\r\n    0xdf,\r\n    0xab,\r\n    0xb6,\r\n    0x66,\r\n    0x3e,\r\n    0xf2,\r\n    0x0c,\r\n    0xd4,\r\n    0x8b,\r\n    0xfe,\r\n    0xe3,\r\n    0xf9,\r\n    0x76,\r\n    0x2f,\r\n    0x14,\r\n    0x1c,\r\n    0x63,\r\n    0x08,\r\n    0x6a,\r\n    0x6f,\r\n    0x2d,\r\n    0xb1,\r\n    0x1a,\r\n    0x95,\r\n    0xb0,\r\n    0xce,\r\n    0x37,\r\n    0xc0,\r\n    0x9c,\r\n    0x6e\r\n]);\r\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\r\nvar FN_CAMPAIGN_ID = 'google.c.a.c_id';\r\nvar FN_CAMPAIGN_NAME = 'google.c.a.c_l';\r\nvar FN_CAMPAIGN_TIME = 'google.c.a.ts';\r\n/** Set to '1' if Analytics is enabled for the campaign */\r\nvar FN_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    MessageType[\"PUSH_MSG_RECEIVED\"] = \"push-msg-received\";\r\n    MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\r\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2018 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isArrayBufferEqual(a, b) {\r\n    if (a == null || b == null) {\r\n        return false;\r\n    }\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    if (a.byteLength !== b.byteLength) {\r\n        return false;\r\n    }\r\n    var viewA = new DataView(a);\r\n    var viewB = new DataView(b);\r\n    for (var i = 0; i < a.byteLength; i++) {\r\n        if (viewA.getUint8(i) !== viewB.getUint8(i)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction toBase64(arrayBuffer) {\r\n    var uint8Version = new Uint8Array(arrayBuffer);\r\n    return btoa(String.fromCharCode.apply(String, __spread(uint8Version)));\r\n}\r\nfunction arrayBufferToBase64(arrayBuffer) {\r\n    var base64String = toBase64(arrayBuffer);\r\n    return base64String\r\n        .replace(/=/g, '')\r\n        .replace(/\\+/g, '-')\r\n        .replace(/\\//g, '_');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SubscriptionManager = /** @class */ (function () {\r\n    function SubscriptionManager() {\r\n    }\r\n    SubscriptionManager.prototype.getToken = function (services, subscription, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, body, subscribeOptions, responseData, response, err_1, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(services)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        body = getBody(subscription, vapidKey);\r\n                        subscribeOptions = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(body)\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(services.app), subscribeOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 6:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update the underlying token details for fcmToken.\r\n     */\r\n    SubscriptionManager.prototype.updateToken = function (tokenDetails, services, subscription, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, body, updateOptions, responseData, response, err_2, message;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(services)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        body = getBody(subscription, vapidKey);\r\n                        updateOptions = {\r\n                            method: 'PATCH',\r\n                            headers: headers,\r\n                            body: JSON.stringify(body)\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(services.app) + \"/\" + tokenDetails.fcmToken, updateOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                            errorInfo: err_2\r\n                        });\r\n                    case 6:\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        if (!responseData.token) {\r\n                            throw errorFactory.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\r\n                        }\r\n                        return [2 /*return*/, responseData.token];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SubscriptionManager.prototype.deleteToken = function (services, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var headers, unsubscribeOptions, response, responseData, message, err_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getHeaders(services)];\r\n                    case 1:\r\n                        headers = _a.sent();\r\n                        unsubscribeOptions = {\r\n                            method: 'DELETE',\r\n                            headers: headers\r\n                        };\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(getEndpoint(services.app) + \"/\" + tokenDetails.fcmToken, unsubscribeOptions)];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 4:\r\n                        responseData = _a.sent();\r\n                        if (responseData.error) {\r\n                            message = responseData.error.message;\r\n                            throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                                errorInfo: message\r\n                            });\r\n                        }\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        err_3 = _a.sent();\r\n                        throw errorFactory.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\r\n                            errorInfo: err_3\r\n                        });\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SubscriptionManager;\r\n}());\r\nfunction getEndpoint(app) {\r\n    return ENDPOINT + \"/projects/\" + app.options.projectId + \"/registrations\";\r\n}\r\nfunction getHeaders(_a) {\r\n    var app = _a.app, installations = _a.installations;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0: return [4 /*yield*/, installations.getToken()];\r\n                case 1:\r\n                    authToken = _b.sent();\r\n                    return [2 /*return*/, new Headers({\r\n                            'Content-Type': 'application/json',\r\n                            Accept: 'application/json',\r\n                            'x-goog-api-key': app.options.apiKey,\r\n                            'x-goog-firebase-installations-auth': \"FIS \" + authToken\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getBody(subscription, vapidKey) {\r\n    var p256dh = arrayBufferToBase64(subscription.getKey('p256dh'));\r\n    var auth = arrayBufferToBase64(subscription.getKey('auth'));\r\n    var body = {\r\n        web: {\r\n            endpoint: subscription.endpoint,\r\n            p256dh: p256dh,\r\n            auth: auth\r\n        }\r\n    };\r\n    if (!isArrayBufferEqual(vapidKey.buffer, DEFAULT_PUBLIC_VAPID_KEY.buffer)) {\r\n        body.web.applicationPubKey = arrayBufferToBase64(vapidKey);\r\n    }\r\n    return body;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction base64ToArrayBuffer(base64String) {\r\n    var padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n    var rawData = atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OLD_DB_NAME = 'undefined';\r\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\r\nfunction handleDb(db, services) {\r\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\r\n        // We found a database with the name 'undefined', but our expected object\r\n        // store isn't defined.\r\n        return;\r\n    }\r\n    var transaction = db.transaction(OLD_OBJECT_STORE_NAME);\r\n    var objectStore = transaction.objectStore(OLD_OBJECT_STORE_NAME);\r\n    var subscriptionManager = new SubscriptionManager();\r\n    var openCursorRequest = objectStore.openCursor();\r\n    openCursorRequest.onerror = function (event) {\r\n        // NOOP - Nothing we can do.\r\n        console.warn('Unable to cleanup old IDB.', event);\r\n    };\r\n    openCursorRequest.onsuccess = function () {\r\n        var cursor = openCursorRequest.result;\r\n        if (cursor) {\r\n            // cursor.value contains the current record being iterated through\r\n            // this is where you'd do something with the result\r\n            var tokenDetails = cursor.value;\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            subscriptionManager.deleteToken(services, tokenDetails);\r\n            cursor.continue();\r\n        }\r\n        else {\r\n            db.close();\r\n            indexedDB.deleteDatabase(OLD_DB_NAME);\r\n        }\r\n    };\r\n}\r\nfunction cleanV1(services) {\r\n    var request = indexedDB.open(OLD_DB_NAME);\r\n    request.onerror = function (_event) {\r\n        // NOOP - Nothing we can do.\r\n    };\r\n    request.onsuccess = function (_event) {\r\n        var db = request.result;\r\n        handleDb(db, services);\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DbInterface = /** @class */ (function () {\r\n    function DbInterface() {\r\n        this.dbPromise = null;\r\n    }\r\n    /** Gets record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.get = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.get(key); });\r\n    };\r\n    /** Gets record(s) from the objectStore that match the given index. */\r\n    DbInterface.prototype.getIndex = function (index, key) {\r\n        function runRequest(objectStore) {\r\n            var idbIndex = objectStore.index(index);\r\n            return idbIndex.get(key);\r\n        }\r\n        return this.createTransaction(runRequest);\r\n    };\r\n    /** Assigns or overwrites the record for the given value. */\r\n    // IndexedDB values are of type \"any\"\r\n    DbInterface.prototype.put = function (value) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.put(value); }, 'readwrite');\r\n    };\r\n    /** Deletes record(s) from the objectStore that match the given key. */\r\n    DbInterface.prototype.delete = function (key) {\r\n        return this.createTransaction(function (objectStore) { return objectStore.delete(key); }, 'readwrite');\r\n    };\r\n    /**\r\n     * Close the currently open database.\r\n     */\r\n    DbInterface.prototype.closeDatabase = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.dbPromise) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.dbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        db.close();\r\n                        this.dbPromise = null;\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an IndexedDB Transaction and passes its objectStore to the\r\n     * runRequest function, which runs the database request.\r\n     *\r\n     * @return Promise that resolves with the result of the runRequest function\r\n     */\r\n    DbInterface.prototype.createTransaction = function (runRequest, mode) {\r\n        if (mode === void 0) { mode = 'readonly'; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db, transaction, request, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDb()];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        transaction = db.transaction(this.objectStoreName, mode);\r\n                        request = transaction.objectStore(this.objectStoreName);\r\n                        return [4 /*yield*/, promisify(runRequest(request))];\r\n                    case 2:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                transaction.oncomplete = function () {\r\n                                    resolve(result);\r\n                                };\r\n                                transaction.onerror = function () {\r\n                                    reject(transaction.error);\r\n                                };\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /** Gets the cached db connection or opens a new one. */\r\n    DbInterface.prototype.getDb = function () {\r\n        var _this = this;\r\n        if (!this.dbPromise) {\r\n            this.dbPromise = new Promise(function (resolve, reject) {\r\n                var request = indexedDB.open(_this.dbName, _this.dbVersion);\r\n                request.onsuccess = function () {\r\n                    resolve(request.result);\r\n                };\r\n                request.onerror = function () {\r\n                    _this.dbPromise = null;\r\n                    reject(request.error);\r\n                };\r\n                request.onupgradeneeded = function (event) { return _this.onDbUpgrade(request, event); };\r\n            });\r\n        }\r\n        return this.dbPromise;\r\n    };\r\n    return DbInterface;\r\n}());\r\n/** Promisifies an IDBRequest. Resolves with the IDBRequest's result. */\r\nfunction promisify(request) {\r\n    return new Promise(function (resolve, reject) {\r\n        request.onsuccess = function () {\r\n            resolve(request.result);\r\n        };\r\n        request.onerror = function () {\r\n            reject(request.error);\r\n        };\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TokenDetailsModel = /** @class */ (function (_super) {\r\n    __extends(TokenDetailsModel, _super);\r\n    function TokenDetailsModel(services) {\r\n        var _this = _super.call(this) || this;\r\n        _this.services = services;\r\n        _this.dbName = 'fcm_token_details_db';\r\n        _this.dbVersion = 4;\r\n        _this.objectStoreName = 'fcm_token_object_Store';\r\n        return _this;\r\n    }\r\n    TokenDetailsModel.prototype.onDbUpgrade = function (request, event) {\r\n        var db = request.result;\r\n        // Lack of 'break' statements is intentional.\r\n        switch (event.oldVersion) {\r\n            case 0: {\r\n                // New IDB instance\r\n                var objectStore = db.createObjectStore(this.objectStoreName, {\r\n                    keyPath: 'swScope'\r\n                });\r\n                // Make sure the sender ID can be searched\r\n                objectStore.createIndex('fcmSenderId', 'fcmSenderId', {\r\n                    unique: false\r\n                });\r\n                objectStore.createIndex('fcmToken', 'fcmToken', { unique: true });\r\n            }\r\n            case 1: {\r\n                // Prior to version 2, we were using either 'fcm_token_details_db'\r\n                // or 'undefined' as the database name due to bug in the SDK\r\n                // So remove the old tokens and databases.\r\n                cleanV1(this.services);\r\n            }\r\n            case 2: {\r\n                // Update from v2 to v4 directly in a single openCursor request.\r\n                // We need to do this because for some reason, doing a subsequent update on the same data\r\n                // in the same transaction drops the first update.\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_1 = objectStore.openCursor();\r\n                cursorRequest_1.onsuccess = function () {\r\n                    var cursor = cursorRequest_1.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (!value.createTime) {\r\n                            newValue.createTime = Date.now();\r\n                        }\r\n                        if (typeof value.vapidKey === 'string') {\r\n                            newValue.vapidKey = base64ToArrayBuffer(value.vapidKey);\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.auth = base64ToArrayBuffer(value.auth).buffer;\r\n                        }\r\n                        if (typeof value.auth === 'string') {\r\n                            newValue.p256dh = base64ToArrayBuffer(value.p256dh).buffer;\r\n                        }\r\n                        if (typeof value.fcmPushSet === 'string') {\r\n                            delete newValue.fcmPushSet;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n                // Break here as we've already updated to v4.\r\n                break;\r\n            }\r\n            case 3: {\r\n                // Update from V3 to V4.\r\n                var objectStore = request.transaction.objectStore(this.objectStoreName);\r\n                var cursorRequest_2 = objectStore.openCursor();\r\n                cursorRequest_2.onsuccess = function () {\r\n                    var cursor = cursorRequest_2.result;\r\n                    if (cursor) {\r\n                        var value = cursor.value;\r\n                        var newValue = __assign({}, value);\r\n                        if (typeof value.fcmPushSet === 'string') {\r\n                            delete newValue.fcmPushSet;\r\n                        }\r\n                        cursor.update(newValue);\r\n                        cursor.continue();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Given a token, this method will look up the details in indexedDB.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromToken = function (fcmToken) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs({ fcmToken: fcmToken });\r\n                return [2 /*return*/, this.getIndex('fcmToken', fcmToken)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the details in\r\n     * indexedDB.\r\n     * @return The details associated with that token.\r\n     */\r\n    TokenDetailsModel.prototype.getTokenDetailsFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                validateInputs({ swScope: swScope });\r\n                return [2 /*return*/, this.get(swScope)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save the details for the fcm token for re-use at a later date.\r\n     * @param input A plain js object containing args to save.\r\n     */\r\n    TokenDetailsModel.prototype.saveTokenDetails = function (tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!tokenDetails.swScope) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (!tokenDetails.vapidKey) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                if (!tokenDetails.endpoint || !tokenDetails.auth || !tokenDetails.p256dh) {\r\n                    throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n                }\r\n                if (!tokenDetails.fcmSenderId) {\r\n                    throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n                }\r\n                if (!tokenDetails.fcmToken) {\r\n                    throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n                }\r\n                validateInputs(tokenDetails);\r\n                return [2 /*return*/, this.put(tokenDetails)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM token.\r\n     * It's returning a promise in case we need to move to an async\r\n     * method for deleting at a later date.\r\n     *\r\n     * @return Resolves once the FCM token details have been deleted and returns\r\n     * the deleted details.\r\n     */\r\n    TokenDetailsModel.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof token !== 'string' || token.length === 0) {\r\n                            return [2 /*return*/, Promise.reject(errorFactory.create(\"invalid-delete-token\" /* INVALID_DELETE_TOKEN */))];\r\n                        }\r\n                        return [4 /*yield*/, this.getTokenDetailsFromToken(token)];\r\n                    case 1:\r\n                        details = _a.sent();\r\n                        if (!details) {\r\n                            throw errorFactory.create(\"delete-token-not-found\" /* DELETE_TOKEN_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(details.swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, details];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return TokenDetailsModel;\r\n}(DbInterface));\r\n/**\r\n * This method takes an object and will check for known arguments and\r\n * validate the input.\r\n * @return Promise that resolves if input is valid, rejects otherwise.\r\n */\r\nfunction validateInputs(input) {\r\n    if (input.fcmToken) {\r\n        if (typeof input.fcmToken !== 'string' || input.fcmToken.length === 0) {\r\n            throw errorFactory.create(\"bad-token\" /* BAD_TOKEN */);\r\n        }\r\n    }\r\n    if (input.swScope) {\r\n        if (typeof input.swScope !== 'string' || input.swScope.length === 0) {\r\n            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n        }\r\n    }\r\n    if (input.vapidKey) {\r\n        if (!(input.vapidKey instanceof Uint8Array) ||\r\n            input.vapidKey.length !== 65) {\r\n            throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n        }\r\n    }\r\n    if (input.endpoint) {\r\n        if (typeof input.endpoint !== 'string' || input.endpoint.length === 0) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.auth) {\r\n        if (!(input.auth instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.p256dh) {\r\n        if (!(input.p256dh instanceof ArrayBuffer)) {\r\n            throw errorFactory.create(\"bad-subscription\" /* BAD_SUBSCRIPTION */);\r\n        }\r\n    }\r\n    if (input.fcmSenderId) {\r\n        if (typeof input.fcmSenderId !== 'string' ||\r\n            input.fcmSenderId.length === 0) {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\r\nvar VapidDetailsModel = /** @class */ (function (_super) {\r\n    __extends(VapidDetailsModel, _super);\r\n    function VapidDetailsModel() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.dbName = 'fcm_vapid_details_db';\r\n        _this.dbVersion = 1;\r\n        _this.objectStoreName = 'fcm_vapid_object_Store';\r\n        return _this;\r\n    }\r\n    VapidDetailsModel.prototype.onDbUpgrade = function (request) {\r\n        var db = request.result;\r\n        db.createObjectStore(this.objectStoreName, { keyPath: 'swScope' });\r\n    };\r\n    /**\r\n     * Given a service worker scope, this method will look up the vapid key\r\n     * in indexedDB.\r\n     */\r\n    VapidDetailsModel.prototype.getVapidFromSWScope = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                            throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                        }\r\n                        return [4 /*yield*/, this.get(swScope)];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        return [2 /*return*/, result ? result.vapidKey : undefined];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Save a vapid key against a swScope for later date.\r\n     */\r\n    VapidDetailsModel.prototype.saveVapidDetails = function (swScope, vapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var details;\r\n            return __generator(this, function (_a) {\r\n                if (typeof swScope !== 'string' || swScope.length === 0) {\r\n                    throw errorFactory.create(\"bad-scope\" /* BAD_SCOPE */);\r\n                }\r\n                if (vapidKey === null || vapidKey.length !== UNCOMPRESSED_PUBLIC_KEY_SIZE) {\r\n                    throw errorFactory.create(\"bad-vapid-key\" /* BAD_VAPID_KEY */);\r\n                }\r\n                details = {\r\n                    swScope: swScope,\r\n                    vapidKey: vapidKey\r\n                };\r\n                return [2 /*return*/, this.put(details)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes details of the current FCM VAPID key for a SW scope.\r\n     * Resolves once the scope/vapid details have been deleted and returns the\r\n     * deleted vapid key.\r\n     */\r\n    VapidDetailsModel.prototype.deleteVapidDetails = function (swScope) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var vapidKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getVapidFromSWScope(swScope)];\r\n                    case 1:\r\n                        vapidKey = _a.sent();\r\n                        if (!vapidKey) {\r\n                            throw errorFactory.create(\"delete-scope-not-found\" /* DELETE_SCOPE_NOT_FOUND */);\r\n                        }\r\n                        return [4 /*yield*/, this.delete(swScope)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, vapidKey];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return VapidDetailsModel;\r\n}(DbInterface));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Token should be refreshed once a week.\r\nvar TOKEN_EXPIRATION_MILLIS = 7 * 24 * 60 * 60 * 1000; // 7 days\r\nvar BaseController = /** @class */ (function () {\r\n    function BaseController(services) {\r\n        var _this = this;\r\n        this.services = services;\r\n        this.vapidDetailsModel = new VapidDetailsModel();\r\n        this.subscriptionManager = new SubscriptionManager();\r\n        var app = services.app;\r\n        this.app = app;\r\n        if (!app.options.messagingSenderId ||\r\n            typeof app.options.messagingSenderId !== 'string') {\r\n            throw errorFactory.create(\"bad-sender-id\" /* BAD_SENDER_ID */);\r\n        }\r\n        this.INTERNAL = {\r\n            delete: function () { return _this.delete(); }\r\n        };\r\n        this.tokenDetailsModel = new TokenDetailsModel(services);\r\n    }\r\n    BaseController.prototype.getToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permission, swReg, publicVapidKey, pushSubscription, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        permission = this.getNotificationPermission();\r\n                        if (!(permission === 'default')) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.requestNotificationPermission()];\r\n                    case 1:\r\n                        // The user hasn't allowed or denied notifications yet. Ask them.\r\n                        permission = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (permission !== 'granted') {\r\n                            throw errorFactory.create(\"notifications-blocked\" /* NOTIFICATIONS_BLOCKED */);\r\n                        }\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 3:\r\n                        swReg = _a.sent();\r\n                        return [4 /*yield*/, this.getPublicVapidKey_()];\r\n                    case 4:\r\n                        publicVapidKey = _a.sent();\r\n                        return [4 /*yield*/, this.getPushSubscription(swReg, publicVapidKey)];\r\n                    case 5:\r\n                        pushSubscription = _a.sent();\r\n                        return [4 /*yield*/, this.tokenDetailsModel.getTokenDetailsFromSWScope(swReg.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (tokenDetails) {\r\n                            return [2 /*return*/, this.manageExistingToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * manageExistingToken is triggered if there's an existing FCM token in the\r\n     * database and it can take 3 different actions:\r\n     * 1) Retrieve the existing FCM token from the database.\r\n     * 2) If VAPID details have changed: Delete the existing token and create a\r\n     * new one with the new VAPID key.\r\n     * 3) If the database cache is invalidated: Send a request to FCM to update\r\n     * the token, and to check if the token is still valid on FCM-side.\r\n     */\r\n    BaseController.prototype.manageExistingToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isTokenValid, now;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        isTokenValid = isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails);\r\n                        if (!isTokenValid) return [3 /*break*/, 1];\r\n                        now = Date.now();\r\n                        if (now < tokenDetails.createTime + TOKEN_EXPIRATION_MILLIS) {\r\n                            return [2 /*return*/, tokenDetails.fcmToken];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, this.updateToken(swReg, pushSubscription, publicVapidKey, tokenDetails)];\r\n                        }\r\n                    case 1: \r\n                    // If the token is no longer valid (for example if the VAPID details\r\n                    // have changed), delete the existing token from the FCM client and server\r\n                    // database. No need to unsubscribe from the Service Worker as we have a\r\n                    // good push subscription that we'd like to use in getNewToken.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(tokenDetails.fcmToken)];\r\n                    case 2:\r\n                        // If the token is no longer valid (for example if the VAPID details\r\n                        // have changed), delete the existing token from the FCM client and server\r\n                        // database. No need to unsubscribe from the Service Worker as we have a\r\n                        // good push subscription that we'd like to use in getNewToken.\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.getNewToken(swReg, pushSubscription, publicVapidKey)];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.updateToken = function (swReg, pushSubscription, publicVapidKey, tokenDetails) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var updatedToken, allDetails, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 4, , 6]);\r\n                        return [4 /*yield*/, this.subscriptionManager.updateToken(tokenDetails, this.services, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        updatedToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.services.app.options.messagingSenderId,\r\n                            fcmToken: updatedToken,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, updatedToken];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getNewToken = function (swReg, pushSubscription, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var newToken, allDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.subscriptionManager.getToken(this.services, pushSubscription, publicVapidKey)];\r\n                    case 1:\r\n                        newToken = _a.sent();\r\n                        allDetails = {\r\n                            swScope: swReg.scope,\r\n                            vapidKey: publicVapidKey,\r\n                            fcmSenderId: this.app.options.messagingSenderId,\r\n                            fcmToken: newToken,\r\n                            createTime: Date.now(),\r\n                            endpoint: pushSubscription.endpoint,\r\n                            auth: pushSubscription.getKey('auth'),\r\n                            p256dh: pushSubscription.getKey('p256dh')\r\n                        };\r\n                        return [4 /*yield*/, this.tokenDetailsModel.saveTokenDetails(allDetails)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.vapidDetailsModel.saveVapidDetails(swReg.scope, publicVapidKey)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, newToken];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method deletes tokens that the token manager looks after,\r\n     * unsubscribes the token from FCM  and then unregisters the push\r\n     * subscription if it exists. It returns a promise that indicates\r\n     * whether or not the unsubscribe request was processed successfully.\r\n     */\r\n    BaseController.prototype.deleteToken = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, pushSubscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: \r\n                    // Delete the token details from the database.\r\n                    return [4 /*yield*/, this.deleteTokenFromDB(token)];\r\n                    case 1:\r\n                        // Delete the token details from the database.\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        registration = _a.sent();\r\n                        if (!registration) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 3:\r\n                        pushSubscription = _a.sent();\r\n                        if (pushSubscription) {\r\n                            return [2 /*return*/, pushSubscription.unsubscribe()];\r\n                        }\r\n                        _a.label = 4;\r\n                    case 4: \r\n                    // If there's no SW, consider it a success.\r\n                    return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will delete the token from the client database, and make a\r\n     * call to FCM to remove it from the server DB. Does not temper with the\r\n     * push subscription.\r\n     */\r\n    BaseController.prototype.deleteTokenFromDB = function (token) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenDetails, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.tokenDetailsModel.deleteToken(token)];\r\n                    case 1:\r\n                        tokenDetails = _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.subscriptionManager.deleteToken(this.services, tokenDetails)];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_2 = _a.sent();\r\n                        // A failed server-side delete does not need to break the app.\r\n                        console.error(e_2);\r\n                        return [3 /*break*/, 5];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets a PushSubscription for the current user.\r\n     */\r\n    BaseController.prototype.getPushSubscription = function (swRegistration, publicVapidKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var subscription;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\r\n                    case 1:\r\n                        subscription = _a.sent();\r\n                        if (subscription) {\r\n                            return [2 /*return*/, subscription];\r\n                        }\r\n                        return [2 /*return*/, swRegistration.pushManager.subscribe({\r\n                                userVisibleOnly: true,\r\n                                applicationServerKey: publicVapidKey\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    //\r\n    // The following methods should only be available in the window.\r\n    //\r\n    /**\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    BaseController.prototype.requestPermission = function () {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.useServiceWorker = function (_registration) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.usePublicVapidKey = function (_b64PublicKey) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onMessage = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    BaseController.prototype.onTokenRefresh = function (_nextOrObserver, _error, _completed) {\r\n        throw errorFactory.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service worker only.\r\n    //\r\n    BaseController.prototype.setBackgroundMessageHandler = function (_callback) {\r\n        throw errorFactory.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\r\n    };\r\n    //\r\n    // The following methods are used by the service themselves and not exposed\r\n    // publicly or not expected to be used by developers.\r\n    //\r\n    /**\r\n     * This method is required to adhere to the Firebase interface.\r\n     * It closes any currently open indexdb database connections.\r\n     */\r\n    BaseController.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.tokenDetailsModel.closeDatabase(),\r\n                            this.vapidDetailsModel.closeDatabase()\r\n                        ])];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns the current Notification Permission state.\r\n     */\r\n    BaseController.prototype.getNotificationPermission = function () {\r\n        return Notification.permission;\r\n    };\r\n    /**\r\n     * Requests notification permission from the user.\r\n     */\r\n    BaseController.prototype.requestNotificationPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!Notification.requestPermission) {\r\n                    // Notification.requestPermission() is not available in service workers.\r\n                    // Return the current permission.\r\n                    return [2 /*return*/, Notification.permission];\r\n                }\r\n                return [2 /*return*/, Notification.requestPermission()];\r\n            });\r\n        });\r\n    };\r\n    BaseController.prototype.getTokenDetailsModel = function () {\r\n        return this.tokenDetailsModel;\r\n    };\r\n    BaseController.prototype.getVapidDetailsModel = function () {\r\n        return this.vapidDetailsModel;\r\n    };\r\n    // Visible for testing\r\n    // TODO: make protected\r\n    BaseController.prototype.getSubscriptionManager = function () {\r\n        return this.subscriptionManager;\r\n    };\r\n    return BaseController;\r\n}());\r\n/**\r\n * Checks if the tokenDetails match the details provided in the clients.\r\n */\r\nfunction isTokenStillValid(pushSubscription, publicVapidKey, tokenDetails) {\r\n    if (!tokenDetails.vapidKey ||\r\n        !isArrayBufferEqual(publicVapidKey.buffer, tokenDetails.vapidKey.buffer)) {\r\n        return false;\r\n    }\r\n    var isEndpointEqual = pushSubscription.endpoint === tokenDetails.endpoint;\r\n    var isAuthEqual = isArrayBufferEqual(pushSubscription.getKey('auth'), tokenDetails.auth);\r\n    var isP256dhEqual = isArrayBufferEqual(pushSubscription.getKey('p256dh'), tokenDetails.p256dh);\r\n    return isEndpointEqual && isAuthEqual && isP256dhEqual;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FCM_MSG = 'FCM_MSG';\r\nvar SwController = /** @class */ (function (_super) {\r\n    __extends(SwController, _super);\r\n    function SwController(services) {\r\n        var _this = _super.call(this, services) || this;\r\n        _this.bgMessageHandler = null;\r\n        self.addEventListener('push', function (e) {\r\n            _this.onPush(e);\r\n        });\r\n        self.addEventListener('pushsubscriptionchange', function (e) {\r\n            _this.onSubChange(e);\r\n        });\r\n        self.addEventListener('notificationclick', function (e) {\r\n            _this.onNotificationClick(e);\r\n        });\r\n        return _this;\r\n    }\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onPush = function (event) {\r\n        event.waitUntil(this.onPush_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onSubChange = function (event) {\r\n        event.waitUntil(this.onSubChange_(event));\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.onNotificationClick = function (event) {\r\n        event.waitUntil(this.onNotificationClick_(event));\r\n    };\r\n    /**\r\n     * A handler for push events that shows notifications based on the content of\r\n     * the payload.\r\n     *\r\n     * The payload must be a JSON-encoded Object with a `notification` key. The\r\n     * value of the `notification` property will be used as the NotificationOptions\r\n     * object passed to showNotification. Additionally, the `title` property of the\r\n     * notification object will be used as the title.\r\n     *\r\n     * If there is no notification data in the payload then no notification will be\r\n     * shown.\r\n     */\r\n    SwController.prototype.onPush_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, hasVisibleClients, notificationDetails, notificationTitle, reg, actions, maxActions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.data) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        try {\r\n                            msgPayload = event.data.json();\r\n                        }\r\n                        catch (err) {\r\n                            // Not JSON so not an FCM message\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.hasVisibleClients_()];\r\n                    case 1:\r\n                        hasVisibleClients = _a.sent();\r\n                        if (hasVisibleClients) {\r\n                            // App in foreground. Send to page.\r\n                            return [2 /*return*/, this.sendMessageToWindowClients_(msgPayload)];\r\n                        }\r\n                        notificationDetails = this.getNotificationData_(msgPayload);\r\n                        if (!notificationDetails) return [3 /*break*/, 3];\r\n                        notificationTitle = notificationDetails.title || '';\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 2:\r\n                        reg = _a.sent();\r\n                        actions = notificationDetails.actions;\r\n                        maxActions = Notification.maxActions;\r\n                        if (actions && maxActions && actions.length > maxActions) {\r\n                            console.warn(\"This browser only supports \" + maxActions + \" actions.\" +\r\n                                \"The remaining actions will not be displayed.\");\r\n                        }\r\n                        return [2 /*return*/, reg.showNotification(notificationTitle, notificationDetails)];\r\n                    case 3:\r\n                        if (!this.bgMessageHandler) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.bgMessageHandler(msgPayload)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 5: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onSubChange_ = function (_event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var registration, err_1, err_2, tokenDetailsModel, tokenDetails;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        registration = _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        err_1 = _a.sent();\r\n                        throw errorFactory.create(\"unable-to-resubscribe\" /* UNABLE_TO_RESUBSCRIBE */, {\r\n                            errorInfo: err_1\r\n                        });\r\n                    case 3:\r\n                        _a.trys.push([3, 5, , 8]);\r\n                        return [4 /*yield*/, registration.pushManager.getSubscription()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        err_2 = _a.sent();\r\n                        tokenDetailsModel = this.getTokenDetailsModel();\r\n                        return [4 /*yield*/, tokenDetailsModel.getTokenDetailsFromSWScope(registration.scope)];\r\n                    case 6:\r\n                        tokenDetails = _a.sent();\r\n                        if (!tokenDetails) {\r\n                            // This should rarely occure, but could if indexedDB\r\n                            // is corrupted or wiped\r\n                            throw err_2;\r\n                        }\r\n                        // Attempt to delete the token if we know it's bad\r\n                        return [4 /*yield*/, this.deleteToken(tokenDetails.fcmToken)];\r\n                    case 7:\r\n                        // Attempt to delete the token if we know it's bad\r\n                        _a.sent();\r\n                        throw err_2;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SwController.prototype.onNotificationClick_ = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msgPayload, link, windowClient, internalMsg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!event.notification ||\r\n                            !event.notification.data ||\r\n                            !event.notification.data[FCM_MSG]) {\r\n                            // Not an FCM notification, do nothing.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (event.action) {\r\n                            // User clicked on an action button.\r\n                            // This will allow devs to act on action button clicks by using a custom\r\n                            // onNotificationClick listener that they define.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Prevent other listeners from receiving the event\r\n                        event.stopImmediatePropagation();\r\n                        event.notification.close();\r\n                        msgPayload = event.notification.data[FCM_MSG];\r\n                        if (!msgPayload.notification) {\r\n                            // Nothing to do.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        link = (msgPayload.fcmOptions && msgPayload.fcmOptions.link) ||\r\n                            msgPayload.notification.click_action;\r\n                        if (!link) {\r\n                            if (msgPayload.data && FN_CAMPAIGN_ID in msgPayload.data) {\r\n                                link = self.location.origin;\r\n                            }\r\n                            else {\r\n                                // Nothing to do.\r\n                                return [2 /*return*/];\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.getWindowClient_(link)];\r\n                    case 1:\r\n                        windowClient = _a.sent();\r\n                        if (!!windowClient) return [3 /*break*/, 4];\r\n                        return [4 /*yield*/, self.clients.openWindow(link)];\r\n                    case 2:\r\n                        // Unable to find window client so need to open one.\r\n                        windowClient = _a.sent();\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        return [4 /*yield*/, sleep(3000)];\r\n                    case 3:\r\n                        // Wait three seconds for the client to initialize and set up the message\r\n                        // handler so that it can receive the message.\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4: return [4 /*yield*/, windowClient.focus()];\r\n                    case 5:\r\n                        windowClient = _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        if (!windowClient) {\r\n                            // Window Client will not be returned if it's for a third party origin.\r\n                            return [2 /*return*/];\r\n                        }\r\n                        // Delete notification and fcmOptions data from payload before sending to\r\n                        // the page.\r\n                        delete msgPayload.notification;\r\n                        delete msgPayload.fcmOptions;\r\n                        internalMsg = createNewMsg(MessageType.NOTIFICATION_CLICKED, msgPayload);\r\n                        // Attempt to send a message to the client to handle the data\r\n                        // Is affected by: https://github.com/slightlyoff/ServiceWorker/issues/728\r\n                        return [2 /*return*/, this.attemptToMessageClient_(windowClient, internalMsg)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getNotificationData_ = function (msgPayload) {\r\n        var _a;\r\n        if (!msgPayload) {\r\n            return;\r\n        }\r\n        if (typeof msgPayload.notification !== 'object') {\r\n            return;\r\n        }\r\n        var notificationInformation = __assign({}, msgPayload.notification);\r\n        // Put the message payload under FCM_MSG name so we can identify the\r\n        // notification as being an FCM notification vs a notification from\r\n        // somewhere else (i.e. normal web push or developer generated\r\n        // notification).\r\n        notificationInformation.data = __assign(__assign({}, msgPayload.notification.data), (_a = {}, _a[FCM_MSG] = msgPayload, _a));\r\n        return notificationInformation;\r\n    };\r\n    /**\r\n     * Calling setBackgroundMessageHandler will opt in to some specific\r\n     * behaviours.\r\n     * 1.) If a notification doesn't need to be shown due to a window already\r\n     * being visible, then push messages will be sent to the page.\r\n     * 2.) If a notification needs to be shown, and the message contains no\r\n     * notification data this method will be called\r\n     * and the promise it returns will be passed to event.waitUntil.\r\n     * If you do not set this callback then all push messages will let and the\r\n     * developer can handle them in a their own 'push' event callback\r\n     *\r\n     * @param callback The callback to be called when a push message is received\r\n     * and a notification must be shown. The callback will be given the data from\r\n     * the push message.\r\n     */\r\n    SwController.prototype.setBackgroundMessageHandler = function (callback) {\r\n        if (!callback || typeof callback !== 'function') {\r\n            throw errorFactory.create(\"bg-handler-function-expected\" /* BG_HANDLER_FUNCTION_EXPECTED */);\r\n        }\r\n        this.bgMessageHandler = callback;\r\n    };\r\n    /**\r\n     * @param url The URL to look for when focusing a client.\r\n     * @return Returns an existing window client or a newly opened WindowClient.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.getWindowClient_ = function (url) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parsedURL, clientList, suitableClient, i, parsedClientUrl;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parsedURL = new URL(url, self.location.href).href;\r\n                        return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        suitableClient = null;\r\n                        for (i = 0; i < clientList.length; i++) {\r\n                            parsedClientUrl = new URL(clientList[i].url, self.location.href)\r\n                                .href;\r\n                            if (parsedClientUrl === parsedURL) {\r\n                                suitableClient = clientList[i];\r\n                                break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, suitableClient];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This message will attempt to send the message to a window client.\r\n     * @param client The WindowClient to send the message to.\r\n     * @param message The message to send to the client.\r\n     * @returns Returns a promise that resolves after sending the message. This\r\n     * does not guarantee that the message was successfully received.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.attemptToMessageClient_ = function (client, message) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // NOTE: This returns a promise in case this API is abstracted later on to\r\n                // do additional work\r\n                if (!client) {\r\n                    throw errorFactory.create(\"no-window-client-to-msg\" /* NO_WINDOW_CLIENT_TO_MSG */);\r\n                }\r\n                client.postMessage(message);\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @returns If there is currently a visible WindowClient, this method will\r\n     * resolve to true, otherwise false.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.hasVisibleClients_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        return [2 /*return*/, clientList.some(function (client) {\r\n                                return client.visibilityState === 'visible' &&\r\n                                    // Ignore chrome-extension clients as that matches the background pages\r\n                                    // of extensions, which are always considered visible.\r\n                                    !client.url.startsWith('chrome-extension://');\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param msgPayload The data from the push event that should be sent to all\r\n     * available pages.\r\n     * @returns Returns a promise that resolves once the message has been sent to\r\n     * all WindowClients.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    SwController.prototype.sendMessageToWindowClients_ = function (msgPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientList, internalMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, getClientList()];\r\n                    case 1:\r\n                        clientList = _a.sent();\r\n                        internalMsg = createNewMsg(MessageType.PUSH_MSG_RECEIVED, msgPayload);\r\n                        return [4 /*yield*/, Promise.all(clientList.map(function (client) {\r\n                                return _this.attemptToMessageClient_(client, internalMsg);\r\n                            }))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration.\r\n     * @return he service worker registration to be used for the push service.\r\n     */\r\n    SwController.prototype.getSWRegistration_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, self.registration];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    SwController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var swReg, vapidKeyFromDatabase;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getSWRegistration_()];\r\n                    case 1:\r\n                        swReg = _a.sent();\r\n                        if (!swReg) {\r\n                            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n                        }\r\n                        return [4 /*yield*/, this.getVapidDetailsModel().getVapidFromSWScope(swReg.scope)];\r\n                    case 2:\r\n                        vapidKeyFromDatabase = _a.sent();\r\n                        if (vapidKeyFromDatabase == null) {\r\n                            return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n                        }\r\n                        return [2 /*return*/, vapidKeyFromDatabase];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SwController;\r\n}(BaseController));\r\nfunction getClientList() {\r\n    return self.clients.matchAll({\r\n        type: 'window',\r\n        includeUncontrolled: true\r\n        // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\r\n    });\r\n}\r\nfunction createNewMsg(msgType, msgData) {\r\n    return {\r\n        firebaseMessagingType: msgType,\r\n        firebaseMessagingData: msgData\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\r\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WindowController = /** @class */ (function (_super) {\r\n    __extends(WindowController, _super);\r\n    /**\r\n     * A service that provides a MessagingService instance.\r\n     */\r\n    function WindowController(services) {\r\n        var _this = _super.call(this, services) || this;\r\n        _this.registrationToUse = null;\r\n        _this.publicVapidKeyToUse = null;\r\n        _this.messageObserver = null;\r\n        // @ts-ignore: Unused variable error, this is not implemented yet.\r\n        _this.tokenRefreshObserver = null;\r\n        _this.onMessageInternal = createSubscribe(function (observer) {\r\n            _this.messageObserver = observer;\r\n        });\r\n        _this.onTokenRefreshInternal = createSubscribe(function (observer) {\r\n            _this.tokenRefreshObserver = observer;\r\n        });\r\n        _this.setupSWMessageListener_();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Request permission if it is not currently granted\r\n     *\r\n     * @return Resolves if the permission was granted, otherwise rejects\r\n     *\r\n     * @deprecated Use Notification.requestPermission() instead.\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n     */\r\n    WindowController.prototype.requestPermission = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var permissionResult;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (Notification.permission === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, Notification.requestPermission()];\r\n                    case 1:\r\n                        permissionResult = _a.sent();\r\n                        if (permissionResult === 'granted') {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        else if (permissionResult === 'denied') {\r\n                            throw errorFactory.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\r\n                        }\r\n                        else {\r\n                            throw errorFactory.create(\"permission-default\" /* PERMISSION_DEFAULT */);\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default service worker and\r\n     * instead use a custom service worker.\r\n     *\r\n     * @param registration The service worker registration that should be used to\r\n     * receive the push messages.\r\n     */\r\n    WindowController.prototype.useServiceWorker = function (registration) {\r\n        if (!(registration instanceof ServiceWorkerRegistration)) {\r\n            throw errorFactory.create(\"sw-registration-expected\" /* SW_REGISTRATION_EXPECTED */);\r\n        }\r\n        if (this.registrationToUse != null) {\r\n            throw errorFactory.create(\"use-sw-before-get-token\" /* USE_SW_BEFORE_GET_TOKEN */);\r\n        }\r\n        this.registrationToUse = registration;\r\n    };\r\n    /**\r\n     * This method allows a developer to override the default vapid key\r\n     * and instead use a custom VAPID public key.\r\n     *\r\n     * @param publicKey A URL safe base64 encoded string.\r\n     */\r\n    WindowController.prototype.usePublicVapidKey = function (publicKey) {\r\n        if (typeof publicKey !== 'string') {\r\n            throw errorFactory.create(\"invalid-public-vapid-key\" /* INVALID_PUBLIC_VAPID_KEY */);\r\n        }\r\n        if (this.publicVapidKeyToUse != null) {\r\n            throw errorFactory.create(\"use-public-key-before-get-token\" /* USE_PUBLIC_KEY_BEFORE_GET_TOKEN */);\r\n        }\r\n        var parsedKey = base64ToArrayBuffer(publicKey);\r\n        if (parsedKey.length !== 65) {\r\n            throw errorFactory.create(\"public-vapid-key-decryption-failed\" /* PUBLIC_KEY_DECRYPTION_FAILED */);\r\n        }\r\n        this.publicVapidKeyToUse = parsedKey;\r\n    };\r\n    /**\r\n     * @export\r\n     * @param nextOrObserver An observer object or a function triggered on\r\n     * message.\r\n     * @param error A function triggered on message error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onMessage = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onMessageInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onMessageInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * @param nextOrObserver An observer object or a function triggered on token\r\n     * refresh.\r\n     * @param error A function triggered on token refresh error.\r\n     * @param completed function triggered when the observer is removed.\r\n     * @return The unsubscribe function for the observer.\r\n     */\r\n    WindowController.prototype.onTokenRefresh = function (nextOrObserver, error, completed) {\r\n        if (typeof nextOrObserver === 'function') {\r\n            return this.onTokenRefreshInternal(nextOrObserver, error, completed);\r\n        }\r\n        else {\r\n            return this.onTokenRefreshInternal(nextOrObserver);\r\n        }\r\n    };\r\n    /**\r\n     * Given a registration, wait for the service worker it relates to\r\n     * become activer\r\n     * @param registration Registration to wait for service worker to become active\r\n     * @return Wait for service worker registration to become active\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.waitForRegistrationToActivate_ = function (registration) {\r\n        var serviceWorker = registration.installing || registration.waiting || registration.active;\r\n        return new Promise(function (resolve, reject) {\r\n            if (!serviceWorker) {\r\n                // This is a rare scenario but has occured in firefox\r\n                reject(errorFactory.create(\"no-sw-in-reg\" /* NO_SW_IN_REG */));\r\n                return;\r\n            }\r\n            // Because the Promise function is called on next tick there is a\r\n            // small chance that the worker became active or redundant already.\r\n            if (serviceWorker.state === 'activated') {\r\n                resolve(registration);\r\n                return;\r\n            }\r\n            if (serviceWorker.state === 'redundant') {\r\n                reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                return;\r\n            }\r\n            var stateChangeListener = function () {\r\n                if (serviceWorker.state === 'activated') {\r\n                    resolve(registration);\r\n                }\r\n                else if (serviceWorker.state === 'redundant') {\r\n                    reject(errorFactory.create(\"sw-reg-redundant\" /* SW_REG_REDUNDANT */));\r\n                }\r\n                else {\r\n                    // Return early and wait to next state change\r\n                    return;\r\n                }\r\n                serviceWorker.removeEventListener('statechange', stateChangeListener);\r\n            };\r\n            serviceWorker.addEventListener('statechange', stateChangeListener);\r\n        });\r\n    };\r\n    /**\r\n     * This will register the default service worker and return the registration\r\n     * @return The service worker registration to be used for the push service.\r\n     */\r\n    WindowController.prototype.getSWRegistration_ = function () {\r\n        var _this = this;\r\n        if (this.registrationToUse) {\r\n            return this.waitForRegistrationToActivate_(this.registrationToUse);\r\n        }\r\n        // Make the registration null so we know useServiceWorker will not\r\n        // use a new service worker as registrationToUse is no longer undefined\r\n        this.registrationToUse = null;\r\n        return navigator.serviceWorker\r\n            .register(DEFAULT_SW_PATH, {\r\n            scope: DEFAULT_SW_SCOPE\r\n        })\r\n            .catch(function (err) {\r\n            throw errorFactory.create(\"failed-serviceworker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\r\n                browserErrorMessage: err.message\r\n            });\r\n        })\r\n            .then(function (registration) {\r\n            return _this.waitForRegistrationToActivate_(registration).then(function () {\r\n                _this.registrationToUse = registration;\r\n                // We update after activation due to an issue with Firefox v49 where\r\n                // a race condition occassionally causes the service worker to not\r\n                // install\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                registration.update();\r\n                return registration;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This will return the default VAPID key or the uint8array version of the\r\n     * public VAPID key provided by the developer.\r\n     */\r\n    WindowController.prototype.getPublicVapidKey_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.publicVapidKeyToUse) {\r\n                    return [2 /*return*/, this.publicVapidKeyToUse];\r\n                }\r\n                return [2 /*return*/, DEFAULT_PUBLIC_VAPID_KEY];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This method will set up a message listener to handle\r\n     * events from the service worker that should trigger\r\n     * events in the page.\r\n     */\r\n    // Visible for testing\r\n    // TODO: Make private\r\n    WindowController.prototype.setupSWMessageListener_ = function () {\r\n        var _this = this;\r\n        navigator.serviceWorker.addEventListener('message', function (event) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a, firebaseMessagingType, firebaseMessagingData, data, eventType, analytics;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!event.data ||\r\n                            !event.data.firebaseMessagingType ||\r\n                            !event.data.firebaseMessagingData) {\r\n                            // Not a message from FCM\r\n                            return [2 /*return*/];\r\n                        }\r\n                        _a = event.data, firebaseMessagingType = _a.firebaseMessagingType, firebaseMessagingData = _a.firebaseMessagingData;\r\n                        if (this.messageObserver) {\r\n                            this.messageObserver.next(firebaseMessagingData);\r\n                        }\r\n                        data = firebaseMessagingData.data;\r\n                        if (!(data &&\r\n                            FN_CAMPAIGN_ID in data &&\r\n                            data[FN_CAMPAIGN_ANALYTICS_ENABLED] === '1')) return [3 /*break*/, 2];\r\n                        eventType = getEventType(firebaseMessagingType);\r\n                        return [4 /*yield*/, this.services.analyticsProvider.get()];\r\n                    case 1:\r\n                        analytics = _b.sent();\r\n                        analytics.logEvent(eventType, \r\n                        /* eslint-disable camelcase */\r\n                        {\r\n                            message_name: data[FN_CAMPAIGN_NAME],\r\n                            message_id: data[FN_CAMPAIGN_ID],\r\n                            message_time: data[FN_CAMPAIGN_TIME],\r\n                            message_device_time: Math.floor(Date.now() / 1000)\r\n                        }\r\n                        /* eslint-enable camelcase */\r\n                        );\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); }, false);\r\n    };\r\n    return WindowController;\r\n}(BaseController));\r\nfunction getEventType(messageType) {\r\n    switch (messageType) {\r\n        case MessageType.NOTIFICATION_CLICKED:\r\n            return 'notification_open';\r\n        case MessageType.PUSH_MSG_RECEIVED:\r\n            return 'notification_foreground';\r\n        default:\r\n            throw new Error();\r\n    }\r\n}\n\nvar name = \"@firebase/messaging\";\nvar version = \"0.6.0\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerMessaging(instance) {\r\n    var messagingName = 'messaging';\r\n    var factoryMethod = function (container) {\r\n        /* Dependencies */\r\n        var app = container.getProvider('app').getImmediate();\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        var analyticsProvider = container.getProvider('analytics-internal');\r\n        var firebaseServices = {\r\n            app: app,\r\n            installations: installations,\r\n            analyticsProvider: analyticsProvider\r\n        };\r\n        if (!isSupported()) {\r\n            throw errorFactory.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\r\n        }\r\n        if (self && 'ServiceWorkerGlobalScope' in self) {\r\n            // Running in ServiceWorker context\r\n            return new SwController(firebaseServices);\r\n        }\r\n        else {\r\n            // Assume we are in the window context.\r\n            return new WindowController(firebaseServices);\r\n        }\r\n    };\r\n    var namespaceExports = {\r\n        isSupported: isSupported\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(messagingName, factoryMethod, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterMessaging(firebase);\r\nfunction isSupported() {\r\n    if (self && 'ServiceWorkerGlobalScope' in self) {\r\n        // Running in ServiceWorker context\r\n        return isSWControllerSupported();\r\n    }\r\n    else {\r\n        // Assume we are in the window context.\r\n        return isWindowControllerSupported();\r\n    }\r\n}\r\n/**\r\n * Checks to see if the required APIs exist.\r\n */\r\nfunction isWindowControllerSupported() {\r\n    return (navigator.cookieEnabled &&\r\n        'serviceWorker' in navigator &&\r\n        'PushManager' in window &&\r\n        'Notification' in window &&\r\n        'fetch' in window &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\r\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\r\nfunction isSWControllerSupported() {\r\n    return ('PushManager' in self &&\r\n        'Notification' in self &&\r\n        ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\r\n        PushSubscription.prototype.hasOwnProperty('getKey'));\r\n}\n\nexport { isSupported, registerMessaging };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/messaging';\n//# sourceMappingURL=index.esm.js.map\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"sourceRoot":"webpack:///","file":"firebase-messaging-es5.js"}